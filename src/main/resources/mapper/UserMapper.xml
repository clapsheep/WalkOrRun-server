<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wor.dash.user.model.dao.UserMapper">
  <!-- <resultMap id="BaseResultMap" type="com.wor.dash.user.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_phone_number" jdbcType="VARCHAR" property="userPhoneNumber" />
    <result column="user_join_date" jdbcType="TIMESTAMP" property="userJoinDate" />
    <result column="user_withdrawal_date" jdbcType="TIMESTAMP" property="userWithdrawalDate" />
    <result column="user_withdrawal_status" jdbcType="TINYINT" property="userWithdrawalStatus" />
    <result column="user_role" jdbcType="VARCHAR" property="userRole" />
  </resultMap> -->
  
  <sql id="Base_Column_List">
  	user_id, user_password, user_name, user_email, user_nickname, user_phone_number,
  	user_join_date, user_withdrawal_date, user_withdrawal_status, user_role
  </sql>
  
  <select id="findByUserEmail" parameterType="string" resultType="user">
  	select 
	<include refid="Base_Column_List" />
  	from Users
  	where user_email = #{userEmail}
  </select>
  
  <insert id="addUser" parameterType="user" useGeneratedKeys="true" keyProperty="userId">
  	insert into Users
  	<trim prefix="(" suffix=")" suffixOverrides=",">
  	  <if test="userId != null">
  	  	user_id,
  	  </if>
  	  <if test="userPassword != null">
  	  	user_password,
  	  </if>
  	  <if test="userName != null">
  	  	user_name,
  	  </if>
  	  <if test="userEmail != null">
  	  	user_email,
  	  </if>
  	  <if test="userNickname != null">
  	  	user_nickname,
  	  </if>
  	  <if test="userPhoneNumber != null">
  	  	user_phone_number,
  	  </if>
  	  <if test="userJoinDate != null">
  	  	user_join_date,
  	  </if>
  	  <if test="userWithdrawalDate != null">
  	  	user_withdrawal_date,
  	  </if>
  	  <if test="userWithdrawalStatus != null">
  	  	user_withdrawal_status,
  	  </if>
  	  <if test="userRole != null">
  	  	user_role,
  	  </if>
  	</trim>
  	<trim prefix="values (" suffix=")" suffixOverrides=",">
  	  <if test="userId != null">
  	  	#{userId, jdbcType=INTEGER},
  	  </if>
  	  <if test="userPassword != null">
  	  	#{userPassword, jdbcType=VARCHAR},
  	  </if>
  	  <if test="userName != null">
  	  	#{userName, jdbcType=VARCHAR},
  	  </if>
  	  <if test="userEmail != null">
  	  	#{userEmail, jdbcType=VARCHAR},
  	  </if>
  	  <if test="userNickname != null">
  	  	#{userNickname, jdbcType=VARCHAR},
  	  </if>
  	  <if test="userPhoneNumber != null">
  	  	#{userPhoneNumber, jdbcType=VARCHAR},
  	  </if>
  	  <if test="userJoinDate != null">
  	  	#{userJoinDate, jdbcType=TIMESTAMP},
  	  </if>
  	  <if test="userWithdrawalDate != null">
  	  	#{userWithdrawalDate, jdbcType=TIMESTAMP},
  	  </if>
  	  <if test="userWithdrawalStatus != null">
  	  	#{userWithdrawalStatus, jdbcType=INTEGER},
  	  </if>
  	  <if test="userRole != null">
  	  	#{userRole, jdbcType=VARCHAR},
  	  </if>
  	</trim>
  </insert>
  
  <select id="selectWithoutPassword" parameterType="string" resultType="user">
  	select user_id, user_name, user_email, user_nickname, user_phone_number, user_join_date,
  	user_withdrawal_date, user_withdrawal_status, user_role
  	from Users
  	where user_email = #{userEmail}
  </select>
</mapper>