<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wor.dash.user.model.mapper.UserMapper">
    <insert id="insertUser" parameterType="user" useGeneratedKeys="true"
            keyProperty="userId">
        insert into User (user_password, user_name, user_email, user_nickname,
                          user_phone_number)
        values (#{userPassword, jdbcType=VARCHAR}, #{userName, jdbcType=VARCHAR},
                #{userEmail, jdbcType=VARCHAR}, #{userNickname, jdbcType=VARCHAR},
                #{userPhoneNumber, jdbcType=VARCHAR})
    </insert>
    <select id="selectUserId" parameterType="String" resultType="int">
        select user_id
        from User
        where user_email = #{userEmail}
    </select>
    <select id="selectPublicInfo" parameterType="string" resultType="User">
        select u.user_id,
               u.user_name,
               u.user_email,
               u.user_nickname,
               u.user_phone_number,
               pq.question_description                   as user_password_question_description,
               pa.password_question_answer               as user_password_answer,
               u.user_role,
               DATE_FORMAT(u.user_join_date, '%Y-%m-%d') as user_join_date
        from User u
                 left join Password_Answer pa on pa.user_id = u.user_id
                 left join Password_Question pq on pq.question_id = pa.question_id
        where u.user_email = #{userEmail};
    </select>
    <select id="selectUserImportantInfo" parameterType="string">
        select u.user_id,
               u.user_password,
               u.user_name,
               u.user_email,
               u.user_nickname,
               u.user_phone_number,
               u.user_join_date,
               u.user_withdrawal_date,
               u.user_withdrawal_status,
               pa.password_question_answer as user_password_answer,
               u.user_role
        from User u
                 left join Password_Answer pa on pa.user_id = u.user_id
        where user_email = #{userEmail}
    </select>
    <update id="updateUserRole" parameterType="int">
        UPDATE User
        SET user_role = 'ADMIN'
        WHERE user_id = #{userId}
    </update>
    <update id="updateUser" parameterType="user">
        UPDATE User
        SET user_name         = #{userName},
            user_nickname     = #{userNickname},
            user_phone_number = #{userPhoneNumber}
        WHERE user_id = #{userId}
    </update>
    <select id="selectChallengesByUserId" resultType="MyChallenge">
        select cc.challenge_category_name,
               c.challenge_title,
               c.challenge_description,
               a.user_nickname                                                          as author,
               case
                   when DATEDIFF(c.challenge_delete_date, NOW()) > 0
                       then CONCAT('D-', DATEDIFF(c.challenge_delete_date, NOW()))
                   when DATEDIFF(c.challenge_delete_date, NOW()) = 0
                       then 'D-Day'
                   else CONCAT('D+', ABS(DATEDIFF(c.challenge_delete_date, NOW()))) end as dDay
        from User u
                 left join Challenge_Participant cp on u.user_id = cp.user_id
                 left join Challenge c on cp.challenge_id = c.challenge_id
                 left join Challenge_Category cc
                           on c.challenge_category_code = cc.challenge_category_code
                 left join User a on a.user_id = c.challenge_author_id
        where u.user_id = #{userId}
        ORDER BY c.challenge_create_date desc LIMIT #{offset}, #{pageSize};
    </select>
    <update id="deleteUser" parameterType="int">
        update User
        set user_withdrawal_status = 1
        where user_id = #{userId}
    </update>
    <update id="updateUserPassword" parameterType="User">
        update User
        set user_password = #{userPassword}
        where user_email = #{userEmail}
    </update>
    <select id="selectUserEncodedPassword" parameterType="string">
        select user_password
        from User
        where user_email = #{userEmail}
    </select>
    <select id="selectUserEmailById" parameterType="int">
        select user_email
        from User
        where user_id = #{userId}
    </select>
    <select id="selectUserListForSearch" resultType="User">
        select user_id, user_nickname from User
        <where>
            <choose>
                <when test="type == 'email'">user_email like concat('%', #{value}, '%')</when>
                <when test="type == 'nickname'">user_nickname like concat('%', #{value}, '%')</when>
            </choose>
        </where>
        ORDER BY user_nickname LIMIT #{offset}, #{pageSize}
    </select>
    <select id="selectUserEmailByInfo" parameterType="user" resultType="string">
        select user_email
        from User u
        where user_name = #{userName}
        and user_phone_number = #{userPhoneNumber}
    </select>
    <select id="selectUserEmailCount" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM User
        WHERE user_email = #{userEmail}
    </select>
    <select id="selectUserNicknameCount" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM User
        WHERE user_nickname = #{userNickname}
    </select>
</mapper>