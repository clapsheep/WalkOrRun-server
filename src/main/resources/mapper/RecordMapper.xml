<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wor.dash.record.model.mapper.RecordMapper">

    <insert id="batchInsertRecords" parameterType="java.util.List">
        INSERT INTO Record (
        user_id,
        total_calorie,
        distance,
        max_heart_rate,
        min_heart_rate,
        mean_heart_rate,
        step_count,
        mean_speed,
        max_speed,
        start_time,
        end_time
        ) VALUES
        <foreach collection="list" item="record" separator=",">
            (
            #{record.userId},
            #{record.totalCalorie},
            #{record.distance},
            #{record.maxHeartRate},
            #{record.minHeartRate},
            #{record.meanHeartRate},
            #{record.count},
            #{record.meanSpeed},
            #{record.maxSpeed},
            #{record.startTime},
            #{record.endTime}
            )
        </foreach>
    </insert>

    <select id="getCadenceData">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.step_count) as stepCount,
                SUM(TIMESTAMPDIFF(MINUTE, r.start_time, r.end_time)) as totalMinutes,
                SUM(r.step_count) / SUM(TIMESTAMPDIFF(MINUTE, r.start_time, r.end_time)) as cadence,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) >= DATE(#{startTime})
                AND DATE(start_time) = DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id;
        ]]>
        <!-- 테스트 : NOW() -> '2024-10-22'-->
    </select>

    <select id="getCalorieList">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.total_calorie) as totalCalorie,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) >= DATE(#{startTime}) - INTERVAL 6 DAY
                -- AND DATE(start_time) <= DATE(#{endTime})
                AND DATE(start_time) >= DATE('2024-10-22') - INTERVAL 6 DAY
                AND DATE(start_time) <= DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id
            ORDER BY startTime DESC;
        ]]>
        <!-- 테스트 : NOW() -> '2024-10-22'-->
    </select>

    <select id="getDistanceData">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.distance) as distance,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) = DATE(#{startTime})
                AND DATE(start_time) = DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id
        ]]>
        <!-- 테스트 : NOW() -> '2024-10-22'-->
    </select>

    <select id="getHeartRateList">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.min_heart_rate) as minHeartRate,
                SUM(r.max_heart_rate) as maxHeartRate,
                SUM(r.mean_heart_rate) as meanHeartRate,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) >= DATE(#{startTime}) - INTERVAL 6 DAY
                -- AND DATE(start_time) <= DATE(#{endTime})
                AND DATE(start_time) >= DATE('2024-10-22') - INTERVAL 6 DAY
                AND DATE(start_time) <= DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id
            ORDER BY startTime DESC;
        ]]>
    </select>

    <select id="getRecordList">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.total_calorie) as totalCalorie,
                SUM(r.distance) as distance,
                SUM(r.max_heart_rate) as maxHeartRate,
                SUM(r.min_heart_rate) as minHeartRate,
                SUM(r.mean_heart_rate) as meanHeartRate,
                SUM(r.step_count) as stepCount,
                SUM(r.mean_speed) as meanSpeed,
                SUM(r.max_speed) as maxSpeed,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime,
                DATE_FORMAT(r.end_time, '%Y-%m-%d') as endTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) >= DATE(#{startTime}) - INTERVAL 6 DAY
                -- AND DATE(start_time) <= DATE(#{endTime})
                AND DATE(start_time) >= DATE('2024-10-22') - INTERVAL 6 DAY
                AND DATE(start_time) <= DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id
            ORDER BY startTime DESC;
        ]]>
    </select>

    <select id="getSpeedData">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.max_speed) as maxSpeed,
                SUM(r.mean_speed) as meanSpeed,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) = DATE(#{startTime})
                AND DATE(start_time) = DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id
        ]]>
    </select>

    <select id="getStepList">
        <![CDATA[
            SELECT
                MAX(r.record_id) as recordId,
                r.user_id as userId,
                SUM(r.step_count) as stepCount,
                DATE_FORMAT(r.start_time, '%Y-%m-%d') as startTime
            FROM Record r
            WHERE r.user_id = #{userId}
                -- AND DATE(start_time) >= DATE(#{startTime}) - INTERVAL 6 DAY
                -- AND DATE(start_time) <= DATE(#{endTime})
                AND DATE(start_time) >= DATE('2024-10-22') - INTERVAL 6 DAY
                AND DATE(start_time) <= DATE('2024-10-22')
            GROUP BY DATE_FORMAT(r.start_time, '%Y-%m-%d'), r.user_id
            ORDER BY startTime DESC;
        ]]>
    </select>
</mapper>

